generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  // This extension gives us `uuid_generate_v1mc()` which generates UUIDs that cluster better than `gen_random_uuid()`
  // while still being difficult to predict and enumerate.
  // Also, while unlikely, `gen_random_uuid()` can in theory produce collisions which can trigger spurious errors on
  // insertion, whereas it's much less likely with `uuid_generate_v1mc()`.
  extensions = [uuidOssp(map: "uuid-ossp")]
}

model Track {
  id            String         @id @default(dbgenerated("uuid_generate_v1mc()")) @db.Uuid
  audio         String
  image         String
  title         String         @db.VarChar(30)
  artist        User           @relation(fields: [artistAddress], references: [address])
  artistAddress String         @db.VarChar(42)
  tags          TagsOnTracks[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@unique([artistAddress, title])
  @@map("tracks")
}

model User {
  address   String   @id @db.VarChar(42)
  tracks    Track[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Tag {
  name   String         @id @db.VarChar(20)
  tracks TagsOnTracks[]

  @@map("tags")
}

model TagsOnTracks {
  track   Track  @relation(fields: [trackId], references: [id])
  trackId String @db.Uuid
  tag     Tag    @relation(fields: [tagName], references: [name])
  tagName String @db.VarChar(20)

  @@id([trackId, tagName])
  @@map("tracks_tags")
}
